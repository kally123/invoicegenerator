// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mc.invoice.repository;

import com.mc.invoice.domain.CustomerBooking;
import com.mc.invoice.domain.QCustomerBooking;
import com.mc.invoice.repository.CustomerBookingRepositoryCustom;
import com.mc.invoice.repository.CustomerBookingRepositoryImpl;
import com.querydsl.core.types.Path;
import com.querydsl.jpa.JPQLQuery;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.jpa.repository.support.QueryDslRepositorySupportExt.AttributeMappingBuilder;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.transaction.annotation.Transactional;

privileged aspect CustomerBookingRepositoryImpl_Roo_Jpa_Repository_Impl {
    
    declare parents: CustomerBookingRepositoryImpl implements CustomerBookingRepositoryCustom;
    
    declare @type: CustomerBookingRepositoryImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CustomerBookingRepositoryImpl.CUSTOMER = "customer";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CustomerBookingRepositoryImpl.ACCOMIDATION = "accomidation";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CustomerBookingRepositoryImpl.NO_OF_DAYS = "noOfDays";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CustomerBookingRepositoryImpl.TOTAL_PRICE = "totalPrice";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CustomerBookingRepositoryImpl.CUSTOMER_DISCOUNT = "customerDiscount";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<CustomerBooking> CustomerBookingRepositoryImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        
        QCustomerBooking customerBooking = QCustomerBooking.customerBooking;
        
        JPQLQuery<CustomerBooking> query = from(customerBooking);
        
        Path<?>[] paths = new Path<?>[] {customerBooking.customer,customerBooking.accomidation,customerBooking.noOfDays,customerBooking.totalPrice,customerBooking.customerDiscount};        
        applyGlobalSearch(globalSearch, query, paths);
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(CUSTOMER, customerBooking.customer)
			.map(ACCOMIDATION, customerBooking.accomidation)
			.map(NO_OF_DAYS, customerBooking.noOfDays)
			.map(TOTAL_PRICE, customerBooking.totalPrice)
			.map(CUSTOMER_DISCOUNT, customerBooking.customerDiscount);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, customerBooking);
    }
    
}
