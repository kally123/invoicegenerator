// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mc.invoice.service.impl;

import com.mc.invoice.domain.Accomidation;
import com.mc.invoice.domain.CustomerBooking;
import com.mc.invoice.repository.AccomidationRepository;
import com.mc.invoice.service.impl.AccomidationServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect AccomidationServiceImpl_Roo_Service_Impl {
    
    declare @type: AccomidationServiceImpl: @Service;
    
    declare @type: AccomidationServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private AccomidationRepository AccomidationServiceImpl.accomidationRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param accomidationRepository
     */
    @Autowired
    public AccomidationServiceImpl.new(AccomidationRepository accomidationRepository) {
        setAccomidationRepository(accomidationRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return AccomidationRepository
     */
    public AccomidationRepository AccomidationServiceImpl.getAccomidationRepository() {
        return accomidationRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param accomidationRepository
     */
    public void AccomidationServiceImpl.setAccomidationRepository(AccomidationRepository accomidationRepository) {
        this.accomidationRepository = accomidationRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param accomidation
     */
    @Transactional
    public void AccomidationServiceImpl.delete(Accomidation accomidation) {
        getAccomidationRepository().delete(accomidation);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Accomidation> AccomidationServiceImpl.save(Iterable<Accomidation> entities) {
        return getAccomidationRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void AccomidationServiceImpl.delete(Iterable<Long> ids) {
        List<Accomidation> toDelete = getAccomidationRepository().findAll(ids);
        getAccomidationRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Accomidation
     */
    @Transactional
    public Accomidation AccomidationServiceImpl.save(Accomidation entity) {
        return getAccomidationRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Accomidation
     */
    public Accomidation AccomidationServiceImpl.findOne(Long id) {
        return getAccomidationRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Accomidation
     */
    public Accomidation AccomidationServiceImpl.findOneForUpdate(Long id) {
        return getAccomidationRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Accomidation> AccomidationServiceImpl.findAll(Iterable<Long> ids) {
        return getAccomidationRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Accomidation> AccomidationServiceImpl.findAll() {
        return getAccomidationRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long AccomidationServiceImpl.count() {
        return getAccomidationRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Accomidation> AccomidationServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getAccomidationRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerBooking
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Accomidation> AccomidationServiceImpl.findByCustomerBooking(CustomerBooking customerBooking, GlobalSearch globalSearch, Pageable pageable) {
        return getAccomidationRepository().findByCustomerBooking(customerBooking, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerBooking
     * @return Long
     */
    public long AccomidationServiceImpl.countByCustomerBooking(CustomerBooking customerBooking) {
        return getAccomidationRepository().countByCustomerBooking(customerBooking);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Accomidation> AccomidationServiceImpl.getEntityType() {
        return Accomidation.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> AccomidationServiceImpl.getIdType() {
        return Long.class;
    }
    
}
